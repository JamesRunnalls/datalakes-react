.multi-steps > li.is-active:before,
.multi-steps > li.is-active ~ li:before {
  content: counter(stepNum);
  font-family: inherit;
  font-weight: 700;
}
.multi-steps > li.is-active:after,
.multi-steps > li.is-active ~ li:after {
  background-color: #ededed;
}
.multi-steps {
  display: table;
  table-layout: fixed;
  width: 100%;
  padding: 0;
}
.multi-steps > li {
  counter-increment: stepNum;
  text-align: center;
  display: table-cell;
  position: relative;
  color: black;
}
.multi-steps > li:before {
  content: "\f00c";
  content: "\2713";
  content: "\10003";
  content: "\10004";
  content: "\2713";
  display: block;
  margin: 0 auto 4px;
  background-color: #fff;
  width: 30px;
  height: 30px;
  line-height: 30px;
  text-align: center;
  font-weight: bold;
  border-width: 2px;
  border-style: solid;
  border-color: black;
  border-radius: 50%;
}
.multi-steps > li:after {
  content: "";
  height: 2px;
  width: 100%;
  background-color: black;
  position: absolute;
  top: 16px;
  left: 50%;
  z-index: -1;
}
.multi-steps > li:last-child:after {
  display: none;
}
.multi-steps > li.is-active:before {
  background-color: #fff;
  border-color: black;
}
.multi-steps > li.is-active ~ li {
  color: #808080;
}
.multi-steps > li.is-active ~ li:before {
  border-color: #ededed;
}

button {
  border: solid 1px black;
  border-radius: 5px;
  background-color: white;
  margin-right: 15px;
  margin-top: 5px;
  cursor: pointer;
  padding: 4px 8px;
  width: 120px;
}

.buttonnav {
  width: 100%;
  text-align: center;
}

.adddataform {
  text-align: center;
}

form select {
  font-size: 14px;
  width: 100%;
  border: solid 1px black;
  border-radius: 5px;
  box-sizing: border-box;
  padding: 6px 5px;
  margin-bottom: 0;
  background-color: white;
}

form .form-group {
  display: inline-block;
  text-align: center;
  padding: 10px 20px;
  width: 100%;
  box-sizing: border-box;
}

form .form-group label {
  display: block;
  color: grey;
  padding-bottom: 3px;
}

form input {
  font-size: 14px;
  width: 100%;
  border: solid 1px black;
  border-radius: 5px;
  box-sizing: border-box;
  padding: 7px 5px;
  margin-bottom: 0;
  background-color: white;
}

table.datareview {
  width: 100%;
  margin-bottom: 40px;
  border-spacing: 10px;
}

table.datareview th {
  padding: 5px 0;
  width: 16.66%;
  border-bottom: solid 1px black;
}

table.datareview th {
  padding: 5px 0;
  width: 16.66%;
  border-bottom: solid 1px black;
}

table.addmetadata {
  margin: auto;
}

table.addmetadata th {
  text-align: left;
}

.input-lineage {
  margin: 30px 0;
}

.text-lineage {
  max-width: 60%;
  margin: auto;
  width: fit-content;
  margin-bottom: 30px;
}

.container-fluid {
  margin-bottom: 50px;
}

.error-message {
  margin: 20px 0;
  min-height:80px;
}

.sk-cube-grid {
  width: 40px;
  height: 40px;
  margin: 0 auto 20px auto;
}

.sk-cube-grid .sk-cube {
  width: 33%;
  height: 33%;
  background-color: black;
  float: left;
  -webkit-animation: sk-cubeGridScaleDelay 2s infinite ease-in-out;
  animation: sk-cubeGridScaleDelay 2s infinite ease-in-out;
}
.sk-cube-grid .sk-cube1 {
  -webkit-animation-delay: 0.2s;
  animation-delay: 0.2s;
}
.sk-cube-grid .sk-cube2 {
  -webkit-animation-delay: 0.3s;
  animation-delay: 0.3s;
}
.sk-cube-grid .sk-cube3 {
  -webkit-animation-delay: 0.4s;
  animation-delay: 0.4s;
}
.sk-cube-grid .sk-cube4 {
  -webkit-animation-delay: 0.1s;
  animation-delay: 0.1s;
}
.sk-cube-grid .sk-cube5 {
  -webkit-animation-delay: 0.2s;
  animation-delay: 0.2s;
}
.sk-cube-grid .sk-cube6 {
  -webkit-animation-delay: 0.3s;
  animation-delay: 0.3s;
}
.sk-cube-grid .sk-cube7 {
  -webkit-animation-delay: 0s;
  animation-delay: 0s;
}
.sk-cube-grid .sk-cube8 {
  -webkit-animation-delay: 0.1s;
  animation-delay: 0.1s;
}
.sk-cube-grid .sk-cube9 {
  -webkit-animation-delay: 0.2s;
  animation-delay: 0.2s;
}

@-webkit-keyframes sk-cubeGridScaleDelay {
  0%,
  70%,
  100% {
    -webkit-transform: scale3D(1, 1, 1);
    transform: scale3D(1, 1, 1);
  }
  35% {
    -webkit-transform: scale3D(0, 0, 1);
    transform: scale3D(0, 0, 1);
  }
}

@keyframes sk-cubeGridScaleDelay {
  0%,
  70%,
  100% {
    -webkit-transform: scale3D(1, 1, 1);
    transform: scale3D(1, 1, 1);
  }
  35% {
    -webkit-transform: scale3D(0, 0, 1);
    transform: scale3D(0, 0, 1);
  }
}
